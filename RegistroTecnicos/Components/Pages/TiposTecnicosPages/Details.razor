@page "/TipoTecnico/Details"
@page "/TipoTecnico/Details/{TipoTecnicoId:int}"
@inject TiposTecnicosService TiposTecnicosService
@inject NavigationManager navigationManager

<PageTitle>Detalles del Tipo de Técnico</PageTitle>

@if (TipoTecnico != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header bg-primary text-white text-center py-2 rounded">
                <h3 class="text-center"><strong>Detalles del Tipo Técnico</strong></h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>TipoTécnicoId:</strong> @TipoTecnico.TipoTecnicoId</li>
                                <li><strong>Descripcion:</strong> @TipoTecnico.Descripcion</li>
                                <li><strong>Activo:</strong> @TipoTecnico.Activo</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer text-center">
                <button type="button" class="btn btn-outline-primary" @onclick="Volver">
                    <i class="bi bi-box-arrow-left"></i> Volver
                </button>
            </div>
        </div>
    </div>
}
else
{
    <p> Tipo Técnico no encontrado.</p>
}

@code {
    [Parameter]
    public int TipoTecnicoId { get; set; }

    public TiposTecnicos? TipoTecnico { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (TipoTecnicoId != 0)
        {
            TipoTecnico = await TiposTecnicosService.Buscar(TipoTecnicoId);
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/TiposTecnicos/Index");
    }
}