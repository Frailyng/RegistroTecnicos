@page "/Cotizaciones/Edit/{CotizacionId:int}"
@inject CotizacionesService CotizacionesService
@inject ClientesServices ClientesService
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<EditForm Model="Cotizacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
     <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white" style="text-align: center;">
            <h3><i class="fas fa-clipboard-list"></i> Editar Cotizacion</h3>
        </div>

         <div class="card-body">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="CotizacionId" class="form-label">CotizacionId:</label>
                    <InputNumber @bind-Value="Cotizacion.CotizacionId" class="form-control" style="font-size: 0.8em;" readonly />
                </div>
            </div>

            <div class="mb-3">
                <label for="Observacion" class="form-label">Observación:</label>
                <InputText @bind-Value="Cotizacion.Observacion" class="form-control" />
                <ValidationMessage For="@(() => Cotizacion.Observacion)" />
            </div>

            <div class="mb-3">
                <label for="Fecha" class="form-label">Fecha:</label>
                <InputDate @bind-Value="Cotizacion.Fecha" class="form-control" />
                <ValidationMessage For="@(() => Cotizacion.Fecha)" />
            </div>

            <div class="mb-3">
                <label for="Monto" class="form-label">Monto:</label>
                <InputNumber @bind-Value="Cotizacion.Monto" class="form-control" />
                <ValidationMessage For="@(() => Cotizacion.Monto)" />
            </div>

            <div class="mb-3">
                <label for="ClienteId" class="form-label">Cliente:</label>
                <InputSelect @bind-Value="Cotizacion.ClienteId" class="form-control">
                    <option value="">Seleccione un Cliente</option>
                    @foreach (var cliente in ListaClientes)
                    {
                        <option value="@cliente.ClienteId">@cliente.Nombres</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Cotizacion.ClienteId)" />
            </div>
        </div>

            <div class="card-footer bg-light d-flex justify-content-center mt-3">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span> Nuevo </button>
                    <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                    <a type="button" href="/Cotizaciones/Index/" class="btn btn-outline-danger"><span class="bi bi-arrow-bar-left"></span> Retroceder </a>
                </div>
            </div>
        </div>
</EditForm>

@code {
    [Parameter]
    public int? CotizacionId { get; set; }

    public Cotizaciones Cotizacion { get; set; } = new Cotizaciones();
    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();

    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await ClientesService.ObtenerListaClientes();

        if (CotizacionId.HasValue)
        {
            Cotizacion.CotizacionId = CotizacionId.Value;
            await Buscar();
        }
    }

    public void Nuevo()
    {
        Cotizacion = new Cotizaciones();
    }

    public async Task Buscar()
    {
        var cotizacionEncontrada = await CotizacionesService.Buscar(Cotizacion.CotizacionId);

        if (cotizacionEncontrada != null)
        {
            Cotizacion = cotizacionEncontrada;
        }
    }

    public async Task Guardar()
    {
        var guardo = await CotizacionesService.Guardar(Cotizacion);
        if (guardo)
        {
            Nuevo();
            navigationManager.NavigateTo("/Cotizaciones/Index");
        }
    }

}
